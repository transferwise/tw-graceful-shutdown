name: "Build and Test"

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  matrix_build:
    name: "Matrix Build"
    runs-on:
      - ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 100
      matrix:
        spring_boot_version:
          - 2.6.5
          - 2.5.11
          - 2.4.13
    env:
      SPRING_BOOT_VERSION: ${{ matrix.spring_boot_version }}
      RUNS_IN_CI: "true"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: "Retrieve gradle settings"
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle
          key: gradle-v1-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties', '**/*.gradle*') }}
      - name: "Assemble jar"
        run: GRADLE_USER_HOME=$HOME/.gradle ./gradlew assemble --console=plain --info --stacktrace
      - name: "Run tests"
        run: GRADLE_USER_HOME=$HOME/.gradle ./gradlew -Dspring.profiles.include=continuous-integration check --console=plain --info --stacktrace
      - name: "Test if publishing works"
        run: GRADLE_USER_HOME=$HOME/.gradle ./gradlew publishToMavenLocal --console=plain --info --stacktrace
      - name: "Publish Test Report"
        uses: mikepenz/action-junit-report@v2
        if: always()
        with:
          report_paths: '**/build/test-results/**/*.xml'
          github_token: ${{ secrets.GITHUB_TOKEN }}
          require_tests: true
      - name: Publish checkstyle report
        if: failure()
        uses: jwgmeligmeyling/checkstyle-github-action@master
        with:
          path: '**/build/reports/**/*.xml'
      - name: Publish spotbugs report
        if: failure()
        uses: jwgmeligmeyling/spotbugs-github-action@master
        with:
          path: '**/build/reports/**/*.xml'
      - name: "Tag release"
        if: github.ref == 'refs/heads/master'
        run: GRADLE_USER_HOME=$HOME/.gradle ./gradlew tagRelease --console=plain --info --stacktrace

  build:
    name: "Build and Test"
    runs-on:
      - ubuntu-latest
    needs: matrix_build
    steps:
      - name: "Do something"
        run: echo 'Matrix build was successful' 
