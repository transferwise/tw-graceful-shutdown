ext.projectName = 'TransferWise Graceful Shutdown'
ext.projectDescription = 'TransferWise Graceful Shutdown - no noise and errors during releases.'
ext.projectGitHubRepoName = 'tw-graceful-shutdown'
ext.projectArtifactName = 'tw-graceful-shutdown'

apply from: '../build.common.gradle'
apply from: '../build.publishing.gradle'

sourceSets {
    test2 {
        java.srcDir "$projectDir/src/test2/java"
        resources.srcDir "$projectDir/src/test2/resources"
        compileClasspath += main.output
        runtimeClasspath += main.output
    }
}

configurations {
    test2Implementation.extendsFrom implementation,local
    test2Runtime.extendsFrom runtime,local
}

task test2(type: Test) {
    testClassesDirs = sourceSets.test2.output.classesDirs
    classpath = sourceSets.test2.runtimeClasspath
}

tasks.findByName("processTest2Resources").configure {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

test2 {
    useJUnitPlatform()
}

check.dependsOn test2

dependencies {
    api project(':tw-graceful-shutdown-interfaces')

    implementation libraries.twBaseUtils
    implementation libraries.springBootStarter
    implementation libraries.springBootActuator
    implementation libraries.springWeb
    implementation libraries.guava

    compileOnly libraries.dbSchedulerSpringBootStarter
    compileOnly libraries.springContext
    compileOnly libraries.javaxServletApi
    compileOnly libraries.slf4jApi

    testImplementation libraries.javaxServletApi
    testImplementation libraries.springBootStarterTest
    testImplementation libraries.awaitility
    
    testRuntimeOnly libraries.dbSchedulerSpringBootStarter
    testRuntimeOnly libraries.springBootStarterJdbc
    testRuntimeOnly libraries.h2
    testRuntimeOnly "org.flywaydb:flyway-core"

    testCompileOnly libraries.spotbugsAnnotations

    test2Implementation libraries.springBootStarterTest
}
